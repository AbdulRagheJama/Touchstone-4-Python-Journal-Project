# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13tD3A6MqxV5iSK__BsinJ8O163mx1OZH
"""

# Defined the variables
book_titles = []
authors = []
genres = []
start_dates = []
end_dates = []
total_books_read = 0
total_reading_time = 0
genre_counts = {}

# Function to input the book details
def input_book_details():
    title = input("Enter book title: ")
    author = input("Enter author: ")
    genre = input("Enter genre: ")
    start_date = input("Enter start date (YYYY-MM-DD): ")
    end_date = input("Enter end date (YYYY-MM-DD): ")

    # Append the inputted data to their respective lists
    book_titles.append(title)
    authors.append(author)
    genres.append(genre)
    start_dates.append(start_date)
    end_dates.append(end_date)

# Function to calc summary
def calculate_summary():
    global total_books_read, total_reading_time, genre_counts

    # Calculate total books read
    total_books_read = len(book_titles)

    # Calculate total reading time
    for i in range(total_books_read):
        start = start_dates[i]
        end = end_dates[i]
        # Start and end dates are in YYYY-MM-DD format
        # Convert to datetime objects for calculation
        start_dt = datetime.strptime(start, '%Y-%m-%d')
        end_dt = datetime.strptime(end, '%Y-%m-%d')
        # Calculate duration in days
        duration = (end_dt - start_dt).days
        total_reading_time += duration

    # Calculate genre distribution
    for genre in genres:
        if genre in genre_counts:
            genre_counts[genre] += 1
        else:
            genre_counts[genre] = 1

# Main Program
input_book_details()
calculate_summary()

# Display Summary Report
print("Summary Report:")
print("Total Books Read:", total_books_read)
print("Total Reading Time (in days):", total_reading_time)
print("Genre Distribution:")
for genre, count in genre_counts.items():
    print(f"- {genre}: {count}")